/* global Sk, sim */
/* exported $builtinmodule */

var $builtinmodule = function(name) {
  var mod = {};

  mod.get_clock = new Sk.builtin.func(function() {
    return sim.clock / sim.fps;
  });

  mod.Motor = Sk.misceval.buildClass(mod, function($gbl, $loc) {
    var self = this;

    $loc.__init__ = new Sk.builtin.func(function(self, address) {
      if (address.v == 'outB') {
        self.side = 'left';
        self.wheel = sim.robotStates.leftWheel;
      } else if (address.v == 'outC') {
        self.side = 'right';
        self.wheel = sim.robotStates.rightWheel;
      } else {
        throw new Sk.builtin.TypeError('No motor connected to ' + String(address.v));
      }
    });

    $loc.command = new Sk.builtin.func(function(self, command) {
      if (command.v == 'run-timed') {
        self.wheel.time_target = sim.clock + self.wheel.time_sp * sim.fps;
        self.wheel.state = 'running';
      } else if (command.v == 'run-to-rel-pos') {
        self.wheel.position_target = self.wheel.pos + self.wheel.position_sp;
        self.wheel.state = 'running';
      } else if (command.v == 'run-to-abs-pos') {
        self.wheel.position_target = self.wheel.position_sp;
        self.wheel.state = 'running';
      }

      self.wheel.command = command.v;
    });

    $loc.state = new Sk.builtin.func(function(self) {
      return self.wheel.state;
    });

    $loc.speed_sp = new Sk.builtin.func(function(self, speed_sp) {
      if (typeof speed_sp != 'undefined') {
        self.wheel.speed_sp = speed_sp.v;
      } else {
        return self.wheel.speed_sp;
      }
    });

    $loc.time_sp = new Sk.builtin.func(function(self, time_sp) {
      if (typeof time_sp != 'undefined') {
        self.wheel.time_sp = time_sp.v;
      } else {
        return self.wheel.time_sp;
      }
    });

    $loc.pos = new Sk.builtin.func(function(self, pos) {
      if (typeof pos != 'undefined') {
        self.wheel.pos = pos.v;
      } else {
        return self.wheel.pos;
      }
    });

    $loc.position_sp = new Sk.builtin.func(function(self, position_sp) {
      if (typeof position_sp != 'undefined') {
        self.wheel.position_sp = position_sp.v;
      } else {
        return self.wheel.position_sp;
      }
    });

    $loc.speed = new Sk.builtin.func(function(self) {
      return self.wheel.speed;
    });



  }, 'Motor', []);

  return mod;
};